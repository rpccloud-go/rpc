package pkgName

import "github.com/rpccloud-go/rpc"

type rpcCache struct{}

// NewRPCCache ...
func NewRPCCache() rpc.FuncCache {
	return &rpcCache{}
}

// Get ...
func (p *rpcCache) Get(fnString string) rpc.FuncCacheType {
	return getFCache(fnString)
}

type n = bool
type o = rpc.Context
type p = rpc.Return
type q = *rpc.RPCStream
type t = rpc.Uint64
type z = interface{}

const af = false
const at = true

func getFCache(fnString string) rpc.FuncCacheType {
	switch fnString {
	case "U":
		return fcU
	}

	return nil
}

func fcU(m o, q q, z z) n {
	a, g := q.ReadUint64()
	if !g || q.CanRead() {
		return af
	}
	z.(func(o, t) p)(m, a)
	return at
}
